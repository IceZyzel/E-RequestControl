apiVersion: apps/v1
kind: Deployment
metadata:
  name: req-db
spec:
  selector:
    matchLabels:
      app: req-db
  template:
    metadata:
      labels:
        app: req-db
    spec:
      containers:
        - name: req-db
          image: zyzelq/req-db:v1
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "123123"
            - name: MYSQL_DATABASE
              value: "request_manager"
          volumeMounts:
            - name: req-db-storage
              mountPath: /var/lib/mysql # Стандартный путь для MySQL данных
      volumes:
        - name: req-db-storage
          persistentVolumeClaim:
            claimName: req-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: req-db
spec:
  selector:
    app: req-db # Должен совпадать с matchLabels из Deployment
  ports:
    - port: 3306 # Порт, который виден внутри кластера
      targetPort: 3306 # Порт контейнера (должен совпадать с containerPort)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: req-db-pvc
spec:
  accessModes:
    - ReadWriteOnce # Том доступен только одной ноде
  resources:
    requests:
      storage: 5Gi # Размер тома (можно увеличить)
  storageClassName: standard # Зависит от вашего кластера (может быть "gp2", "rook-ceph-block" и т. д.)
