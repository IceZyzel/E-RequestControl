apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.ingress.name }}
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: {{ .Values.ingress.className }}
  tls:
    - hosts:
        - {{ .Values.ingress.backendHost }}
        - {{ .Values.ingress.frontendHost }}
      secretName: req-app-tls
  rules:
    - host: {{ .Values.ingress.backendHost }}
      http:
        paths:
          - path: /api
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ .Values.services.back.name }}
                port:
                  number: {{ .Values.services.back.port }}
    - host: {{ .Values.ingress.frontendHost }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.services.front.name }}
                port:
                  number: {{ .Values.services.front.port }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: {{ .Values.ingress.className }}
  tls:
    - hosts:
        - {{ .Values.ingress.grafanaHost }}
      secretName: grafana-tls
  rules:
    - host: {{ .Values.ingress.grafanaHost }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: loki-grafana
                port:
                  number: 80
