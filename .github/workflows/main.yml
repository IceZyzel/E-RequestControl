name: req actions

on: workflow_dispatch

env:
  AWS_REGION: us-east-1
  REPOSITORY_FRONTEND: e-requestcontrol-frontend
  REPOSITORY_BACKEND: e-requestcontrol-backend
  REPOSITORY_DB: e-requestcontrol-db
  EKS_CLUSTER: e-requestcontrol-eks

jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      # Установка Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with: 
          go-version: '1.22' # или твоя нужная версия

      # Установка Node.js (для Vue.js)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # или твоя нужная версия

      - name: Install Node dependencies
        working-directory: request-manager-ui
        run: npm install
# Setup java 11 to be default (sonar-scanner requirement as of 5.x)
      - name: Set Java 11
        uses: actions/setup-java@v3
        with:
         distribution: 'temurin' # See 'Supported distributions' for available options
         java-version: '11'

      # Установка sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7

      - name: Debug Sonar variables
        run: |
          echo "SONAR_ORGANIZATION:${{ secrets.SONAR_ORGANIZATION }}"
          echo "SONAR_PROJECT_KEY:${{ secrets.SONAR_PROJECT_KEY }}"
          echo "SONAR_URL:${{ secrets.SONAR_URL }}"

      # Запуск анализа
      - name: SonarQube Scan
        run: |
          sonar-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.sources=request-manager-api,request-manager-ui \
            -Dsonar.language=go \
            -Dsonar.inclusions=**/*.go,**/*.js,**/*.vue \
            -Dsonar.exclusions=**/node_modules/**,**/vendor/**

  BUILD_AND_PUBLISH:   
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Push Frontend
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: e-requestcontrol-frontend
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          dockerfile: request-manager-ui/dockerfile
          context: ./request-manager-ui

      - name: Push Backend
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: e-requestcontrol-backend
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          dockerfile: request-manager-api/dockerfile
          context: ./request-manager-api

      - name: Push DB
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: e-requestcontrol-db
          region: ${{ env.AWS_REGION }}
          tags: latest,${{ github.run_number }}
          dockerfile: request-manager-database/dockerfile
          context: ./request-manager-database
